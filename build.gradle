import org.apache.tools.ant.filters.*

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    //`java-library`
    id 'java-library'
    //id("com.github.johnrengelman.shadow") version "4.0.4"


}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

configurations {
    localDeps
    compile.extendsFrom(localDeps)
}

dependencies {

    // Use JUnit test framework
    testImplementation "junit:junit:4.12"
    compile "org.apache.axis2:axis2:1.7.9"
    compile group: 'org.apache.ws.commons.axiom', name: 'axiom-api', version: '1.2.22'
    compile "org.apache.axis2:axis2-kernel:1.7.9"
    //compile "org.mongodb:mongo-java-driver:3.10.1"
    //compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.1.1'
    //compile (group: "org.apache.axis2", name: 'axis2', version: '1.7.9', ext: 'pom')

    localDeps "org.mongodb:mongo-java-driver:3.10.1"
    localDeps group: 'org.apache.kafka', name: 'kafka-clients', version: '2.1.1'
    //compile configurations.localDeps

}


//task copyToLib(type: Copy) {
//    from configurations.localDeps
//    into "$buildDir/output/lib"
//}

//task fatJar(type: Jar) {
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}




/*
task copyDependenciesNoSr(type: Copy) {
    from (configurations.compile){
        include 'a','b'
        exclude 'x','y'
    }
    into 'build/libs/nosr/lib'
}
*/

//jar {
    // Include all of the jars from the bundled configuration in our jar
//    from configurations.localDeps.asFileTree.files.collect { zipTree(it) }

//    from configurations.compile
//}

jar {
    into('lib') {
        from configurations.localDeps
    }
    metaInf { from 'src/main/resources/services.xml' }

    into ("main/resources/org/swissbib/srw") {
        from 'src/main/resources/org/swissbib/srw/createRecordForRDFPipeline.xslt'
    }

}

